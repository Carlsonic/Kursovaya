<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>